package util

import (
	"testing"

	. "github.com/smartystreets/goconvey/convey"
)

func TestToInt(t *testing.T) {
	Convey("should convert interface{} to int", t, func() {
		num, err := ToInt(2)
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(float64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(float32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(int64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(int32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(uint64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(uint32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt(uint(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToInt("err")
		So(err, ShouldNotBeNil)
		So(num, ShouldEqual, 0)
	})
}

func TestToFloat64(t *testing.T) {
	Convey("should convert interface{} to float64", t, func() {
		num, err := ToFloat64(2)
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(float64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(float32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(int64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(int32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(uint64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(uint32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64(uint(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToFloat64("err")
		So(err, ShouldNotBeNil)
		So(num, ShouldEqual, 0)
	})
}

func TestToUint32(t *testing.T) {
	Convey("should convert interface{} to uint32", t, func() {
		num, err := ToUint32(2)
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(float64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(float32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(int64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(int32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(uint64(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(uint32(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32(uint(2))
		So(err, ShouldBeNil)
		So(num, ShouldEqual, 2)
		num, err = ToUint32("err")
		So(err, ShouldNotBeNil)
		So(num, ShouldEqual, 0)
	})
}
